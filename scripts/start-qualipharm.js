const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üè• Iniciando Qualipharm Laboratorio Farmac√©utico...');
console.log('');

// Verificar si Docker est√° instalado
try {
  execSync('docker --version', { stdio: 'ignore' });
  console.log('‚úÖ Docker detectado');
} catch (error) {
  console.log('‚ùå Docker no est√° instalado o no est√° en el PATH');
  console.log('üì• Por favor instala Docker Desktop desde: https://www.docker.com/products/docker-desktop/');
  process.exit(1);
}

// Verificar si Docker est√° ejecut√°ndose
try {
  execSync('docker ps', { stdio: 'ignore' });
  console.log('‚úÖ Docker est√° ejecut√°ndose');
} catch (error) {
  console.log('‚ùå Docker no est√° ejecut√°ndose');
  console.log('üîÑ Por favor inicia Docker Desktop');
  process.exit(1);
}

console.log('');
console.log('üê≥ Iniciando servicios de Supabase local...');

try {
  // Iniciar Docker Compose
  execSync('docker-compose up -d', { stdio: 'inherit' });
  console.log('‚úÖ Servicios de Supabase iniciados');
} catch (error) {
  console.log('‚ùå Error iniciando servicios de Supabase');
  console.log('üîç Verifica los logs con: docker-compose logs');
  process.exit(1);
}

console.log('');
console.log('‚è≥ Esperando que los servicios est√©n listos...');

// Esperar 15 segundos para que los servicios se inicialicen
setTimeout(async () => {
  try {
    console.log('üå± Poblando base de datos con datos de Qualipharm...');
    
    // Ejecutar script de seed
    const { seedDatabase } = require('./seed-database');
    await seedDatabase();
    
    console.log('');
    console.log('üéâ ¬°Qualipharm Laboratorio Farmac√©utico est√° listo!');
    console.log('');
    console.log('üè• INFORMACI√ìN DE QUALIPHARM:');
    console.log('   - Empresa: Qualipharm Laboratorio Farmac√©utico');
    console.log('   - Direcci√≥n: Av. 6 de Diciembre N37-140 y Alpallana, Quito, Ecuador');
    console.log('   - Tel√©fono: +593 2 255 1234');
    console.log('   - Email: info@qualipharm.com.ec');
    console.log('   - RUC: 1791234567001');
    console.log('');
    console.log('üìä DATOS INCLUIDOS:');
    console.log('   - 12 categor√≠as farmac√©uticas (Antibi√≥ticos, Analg√©sicos, etc.)');
    console.log('   - 8 proveedores farmac√©uticos (Pfizer, Novartis, Roche, etc.)');
    console.log('   - 8 clientes (Farmacias y Hospitales de Quito)');
    console.log('   - 24 productos farmac√©uticos con c√≥digos de barras');
    console.log('   - 4 ventas con items detallados');
    console.log('   - Movimientos de inventario completos');
    console.log('   - 20 configuraciones del sistema');
    console.log('   - 6 reportes especializados');
    console.log('');
    console.log('üîß FUNCIONALIDADES IMPLEMENTADAS:');
    console.log('   ‚úÖ Sistema de c√≥digos de barras (CODE128, EAN13, etc.)');
    console.log('   ‚úÖ Env√≠o real de emails (SMTP configurado)');
    console.log('   ‚úÖ Sistema de seguridad avanzado (RLS, auditor√≠a)');
    console.log('   ‚úÖ Gesti√≥n completa de inventario');
    console.log('   ‚úÖ Sistema de ventas con facturaci√≥n');
    console.log('   ‚úÖ Reportes avanzados');
    console.log('   ‚úÖ Notificaciones de stock bajo');
    console.log('   ‚úÖ Validaci√≥n de datos y sanitizaci√≥n');
    console.log('   ‚úÖ Sistema de roles y permisos');
    console.log('');
    console.log('üåê URLs de acceso:');
    console.log('   - Aplicaci√≥n: http://localhost:3000');
    console.log('   - API Supabase: http://localhost:54321');
    console.log('   - Kong Gateway: http://localhost:8000');
    console.log('   - PostgreSQL: localhost:54322');
    console.log('');
    console.log('üîë Credenciales:');
    console.log('   - Usuario: postgres');
    console.log('   - Contrase√±a: postgres');
    console.log('   - Base de datos: postgres');
    console.log('');
    console.log('üöÄ Para iniciar la aplicaci√≥n:');
    console.log('   cd apps/web && pnpm dev --port 3000');
    console.log('');
    console.log('üõ†Ô∏è Comandos √∫tiles:');
    console.log('   - Ver logs: docker-compose logs -f');
    console.log('   - Detener: docker-compose down');
    console.log('   - Reiniciar: docker-compose restart');
    console.log('');
    console.log('üì± P√ÅGINAS DISPONIBLES:');
    console.log('   - /usuarios - Gesti√≥n de usuarios');
    console.log('   - /productos - Gesti√≥n de productos con c√≥digos de barras');
    console.log('   - /ventas - Sistema de ventas');
    console.log('   - /inventario - Gesti√≥n de inventario');
    console.log('   - /reportes - Reportes avanzados');
    console.log('   - /configuracion - Configuraci√≥n del sistema');
    console.log('');
    console.log('üéØ ¬°Sistema Qualipharm listo para producci√≥n!');
    
  } catch (error) {
    console.log('‚ùå Error poblando la base de datos:', error.message);
    console.log('üîç Verifica que PostgreSQL est√© ejecut√°ndose');
  }
}, 15000);

