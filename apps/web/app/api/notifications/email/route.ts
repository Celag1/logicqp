import { NextRequest, NextResponse } from 'next/server';

export async function POST(request: NextRequest) {
  try {
    const { to, subject, html, text } = await request.json();

    console.log('üìß API Email - Enviando email a:', to);
    console.log('üìß API Email - Asunto:', subject);

    // En un entorno de producci√≥n, aqu√≠ integrar√≠as con un servicio real como:
    // - SendGrid
    // - Resend
    // - AWS SES
    // - Nodemailer con SMTP

    // Simulaci√≥n de env√≠o de email
    await new Promise(resolve => setTimeout(resolve, 1000));

    // Simular √©xito del env√≠o
    const success = Math.random() > 0.1; // 90% de √©xito simulado

    if (success) {
      console.log('‚úÖ API Email - Email enviado exitosamente');
      
      // En producci√≥n, aqu√≠ guardar√≠as el log en la base de datos
      console.log('üìù API Email - Log guardado:', {
        to,
        subject,
        timestamp: new Date().toISOString(),
        status: 'sent'
      });

      return NextResponse.json({
        success: true,
        message: 'Email enviado exitosamente',
        messageId: `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`
      });
    } else {
      console.log('‚ùå API Email - Error simulado en el env√≠o');
      
      return NextResponse.json({
        success: false,
        message: 'Error al enviar email (simulado)',
        error: 'SMTP_ERROR'
      }, { status: 500 });
    }
  } catch (error) {
    console.error('‚ùå API Email - Error:', error);
    
    return NextResponse.json({
      success: false,
      message: 'Error interno del servidor',
      error: error instanceof Error ? error.message : 'Unknown error'
    }, { status: 500 });
  }
}
